# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

image: docker:latest

services: docker:dind

variables:
   COMPOSE_FILE: docker-compose.yml
   IMAGE_TAG: $CI_COMMIT_SHA
   PROJECT_NAME: travel-app

stages: # List of stages for jobs, and their order of execution
   - build
   - deploy

build-job:
   stage: build
   script:
      - echo "빌드 중..."
      - docker-compose build --build-arg NODE_ENV=production
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      - docker-compose push
      - echo "빌드 완료"
   rules: # commit branch가 main일 때만 실행
      - if: $CI_COMMIT_BRANCH == "main"
        when: never

deploy-job:
   stage: deploy
   script:
      - echo "배포 중..."
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      - docker-compose pull
      - docker-compose up
      - echo "배포 완료"
   rules:
      - if: $CI_COMMIT_BRANCH == "main"
        when: on_success
